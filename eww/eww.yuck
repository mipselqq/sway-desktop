(deflisten metrics "./polling-server/target/release/polling-server 200")
(deflisten volume "./volume")
(defpoll battery :interval "5s" "./battery")
(deflisten layout  "./layout")
(defpoll time :interval "1s" "./time")
(defpoll battery_visible :interval "5s" "[ -n \"$(./battery)\" ] && echo true || echo false")
(deflisten workspaces "./workspaces")

(defwidget metrics_bars [cores net_entries disk_entries mem]
  ;; Monolithic widget for all bar metrics with per-character coloring
  ;; Combines CPU, network, disk, and memory into single optimized widget
  (box :orientation "h" :spacing 2 :space-evenly false :class "metrics-monolith"
    ;; CPU cores section
    (box :orientation "h" :spacing -3 :space-evenly false
      (for core in cores
        (label :class "metric-bar cpu-grad-${round(core[1] / 10, 0)}"
               :text "▌")))
    ;; Network interfaces section
    (box :orientation "h" :spacing -3 :space-evenly false
      (for entry in net_entries
        (box :orientation "h" :spacing -3 :space-evenly false
          (label :class "metric-bar net-recv-${entry[2]}"
                 :text "▌"
                 :tooltip "${entry[0]} ↓ ${round(entry[4], 1)} MiB/s")
          (label :class "metric-bar net-send-${entry[1]}"
                 :text "▌"
                 :tooltip "${entry[0]} ↑ ${round(entry[3], 1)} MiB/s"))))
    ;; Disk devices section
    (box :orientation "h" :spacing -3 :space-evenly false
      (for entry in disk_entries
        (box :orientation "h" :spacing -3 :space-evenly false
          (label :class "metric-bar disk-read-${entry[1]}"
                 :text "▌"
                 :tooltip "${entry[0]} r ${round(entry[3], 1)} MiB/s")
          (label :class "metric-bar disk-write-${entry[2]}"
                 :text "▌"
                 :tooltip "${entry[0]} w ${round(entry[4], 1)} MiB/s"))))
    ;; Memory section with counter and bar
    (box :visible {length(mem) > 0} :orientation "h" :spacing 1 :space-evenly false

      (label :text "${round(mem[1] / 1024, 0)}" :class "metric mem-counter"))))

(defwidget metrics_right []
  ;; Aggregate all metrics on the right side
  (box :class "modules-right" :halign "end" :spacing 2 :space-evenly false
    (metrics_bars :cores {metrics["c"]} :net_entries {metrics["n"]} :disk_entries {metrics["d"]} :mem {metrics["m"]})
    (button :onclick "pavucontrol &"
      (label :text "${volume}" :class "metric volume"))
    (label :text "${layout}" :class "metric lang")
    (label :text "${battery}%" :class "metric battery" :visible battery_visible)
    (systray :class "systray" :icon-size 20)
    (label :text "${time}" :class "metric clock")))

(defwindow bar
  :monitor 0
  :geometry (geometry :x "0%" :y "0" :width "100%" :height "24px" :anchor "bottom center")
  :stacking "fg" :layer "top" :exclusive true
  
  (centerbox :orientation "h"
    (box :class "modules-left" :halign "start"
      (literal :content workspaces))
    
    (box :class "modules-center" :halign "center")
    
    (metrics_right)
  ))
